sudo: required
language: python
python:
- '3.6'
services:
- docker

if: commit_message !~ /(no-ci|wip)/

before_install:
- openssl aes-256-cbc -K $encrypted_112adfae4771_key -iv $encrypted_112adfae4771_iv
  -in chotuve-videos-firebase-adminsdk.json.enc -out chotuve-videos-firebase-adminsdk.json
  -d
- wget -qO- https://toolbelt.heroku.com/install.sh | sh
- echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
- echo "$HEROKU_PASSWORD" | docker login -u "$HEROKU_USERNAME" --password-stdin registry.heroku.com
install: 
script:
- docker build -t chotuve-auth-server .
- docker run -e APP_SETTINGS=development --rm -d --env PORT=5000 -p 5000:5000 --name chotuve-auth-server chotuve-auth-server
- docker exec -it chotuve-auth-server pytest
- docker exec -it -e TRAVIS_JOB_ID="$TRAVIS_JOB_ID" -e TRAVIS_BRANCH="$TRAVIS_BRANCH" -e COVERALLS_REPO_TOKEN="$COVERALLS_REPO_TOKEN" chotuve-auth-server coveralls

deploy:
  - provider: script
    skip_cleanup: true
    script: docker tag chotuve-auth-server registry.heroku.com/$HEROKU_AUTHSERVER_STAGING_APP_NAME/web; docker push santiagomariani/chotuve-auth-server-staging; docker push registry.heroku.com/$HEROKU_AUTHSERVER_STAGING_APP_NAME/web; heroku container:release web --app $HEROKU_AUTHSERVER_STAGING_APP_NAME
    on:
      branch: staging
  - provider: script
    skip_cleanup: true
    script: docker tag chotuve-auth-server registry.heroku.com/$HEROKU_AUTHSERVER_APP_NAME/web; docker push santiagomariani/chotuve-auth-server; docker push registry.heroku.com/$HEROKU_AUTHSERVER_APP_NAME/web; heroku container:release web --app $HEROKU_AUTHSERVER_APP_NAME
    on:
      branch: master